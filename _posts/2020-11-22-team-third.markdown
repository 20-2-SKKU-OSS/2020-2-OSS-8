---
layout: post
title: Team Project에 대한 개인별 역할 및 활동(1)
date: 2020-11-22 14:32:00 +0300
img: role_1.png
tags: 역할 및 활동
---
 프로젝트 경험들을 바탕으로 하여 python base의 Pysnooper과 c++ base의 Tinykaboom 오픈소스 프로젝트에 대해서 본인의 수행 능력과 역량에 맞는 역할을 구체적으로 고민해보았다. 프로젝트를 원활하게 진행하기 위해서 하나의 프로젝트씩 진행하는 것이 좋다고 판단하였고, PySnooper의 개선활동을 우선적으로 진행하기로 결정하였다.

### 구체적인 개인별 역할 및 활동
우선 모든 팀원이 공통적으로 프로젝트의 진행사항(이슈 및 프로젝트보드)과 소스코드 분석을 통해 얻은 정보를 바탕으로 소스코드 추가 및 수정을 할 계획이다. 또한 issue에 올라오는 로그창을 통해 파이썬의 어느 모듈에서 충돌이 발생하는지 알아볼 것이다.
#### 버전에 의한 문제(이진섭, 양세중)
PySnooper의 첫번째 이슈는 2019년 4월에 발생한 것으로 미루어보아 python 3.7버전을 겨냥한 것으로 보인다.  최신 버전은 3.9버전이고, 그 사이에 3.8버전이 존재한다. 우선 최신 버전에서 PySnooper가 정상적으로 작동하는지를 확인하고, 그 후에 같은 코드에 대해서 이전버전과 동일한 동작을 보여주는지를 확인하는 과정을 통해서 issue report, code review를 진행할 예정이다.
#### Time함수 버그(김민제, 천기오)
Pysnooper의 두번째 이슈는 time관련 이슈이다. time 중에서도 relative_time에서 버그가 일어나는데 버그의 주 내용은 특정 포인트에서 시간이 초기화 된다는 이유이다. 이는 pysnooper가 실행시, 시간 생성 모듈과 간섭이 생겨서 발생한 것으로 보인다. 이처럼, pysnooper는 특정 함수랑 결합해서 사용시, 문제가 발생하기도 한다. 이러한 이유로, pysnooper가 어떤 함수와 사용시 버그를 일으키는지에 대해서 찾아보고, issue에 올릴 예정이다.
#### 원하는 범위만의 출력(임호진, 이수민)
원하는 출력범위를 설정하는 기능을 추가하려고 한다. 해당 기능을 삽입할 수 있는지 확인하기 위해서는 구조적인 이해가 필요하기 때문에 PySnooper의 code review가 우선적으로 이루어 질것이다. 코드 분석결과 기능의 추가가 가능할 것으로 보이면 구현 또는 issue report 하고 불가능 하다고 판단되면 나머지 팀으로 분산되어 프로그램에 대한 지식을 공유하는 고문역할을 하게 될 것이다.
